version: '3'
services:
  main:
    image: service-base-ui
    build: .
    depends_on:
        - consul
        - nginx-rp
        - registrator
        - user
    labels:
     SERVICE_NAME: 'service-base-ui'
     SERVICE_TAGS: 'external,kong'
    environment:
     SERVICE_3300_CHECK_HTTP: /api/health/check
     SERVICE_3300_CHECK_INTERVAL: 15s
     SERVICE_3300_CHECK_TIMEOUT: 3s
    volumes:
        - ./api:/home/node/api
        - ./components:/home/node/components
        - ./containers:/home/node/containers
        - ./dev:/home/node/dev
        - ./system:/home/node/system
    ports:
        - '3300:3300'
    command:
        'npm run dev'

  mysql:
    image: 'mysql:5.7'
    command: ['--character-set-server=utf8', '--collation-server=utf8_general_ci']
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
    depends_on:
      - registrator

  user:
    image: opuscapita/user:dev
    depends_on:
     - mysql
     - consul
     - registrator
    labels:
      SERVICE_NAME: 'user'
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      REDIS_AUTH: $REDIS_AUTH
      SERVICE_3008_CHECK_HTTP: /api/health/check
      SERVICE_3008_CHECK_INTERVAL: 15s
      SERVICE_3008_CHECK_TIMEOUT: 3s
    ports:
     - '3008:3008'
    command: 'npm run dev'

  redis:
    image: 'opuscapita/redis:dev'
    environment:
      REDIS_AUTH: $REDIS_AUTH
    depends_on:
      - registrator
    ports:
      - '6379:6379'

  nginx-rp:
    image: opuscapita/nginx-rp:dev
    environment:
        USER_IDENTITY: '{"id": "test", "username": "testUser", "roles": ["admin"]}'
    ports:
      - '8080:8080'
    depends_on:
      - registrator

  registrator:
    image: gliderlabs/registrator
    command: consul://consul:8500
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    depends_on:
      - consul

  consul:
    image: consul:latest
    ports:
      - '8400:8400'
      - '8500:8500'
      - '8600:53/udp'
    labels:
      SERVICE_IGNORE: 'true'  # Do not add any of Consul's services to Consul's service discovery registry.
    command: [agent, '-server', '-ui', '-bootstrap', '-client=0.0.0.0']
